// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/assistant/embedded/v1alpha2/embedded_assistant.proto

package com.google.assistant.embedded.v1alpha2;

/**
 * <pre>
 * Specifies how to process the `AssistRequest` messages.
 * </pre>
 *
 * Protobuf type {@code google.assistant.embedded.v1alpha2.AssistConfig}
 */
public  final class AssistConfig extends
    com.google.protobuf.GeneratedMessageLite<
        AssistConfig, AssistConfig.Builder> implements
    // @@protoc_insertion_point(message_implements:google.assistant.embedded.v1alpha2.AssistConfig)
    AssistConfigOrBuilder {
  private AssistConfig() {
  }
  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite {
    AUDIO_IN_CONFIG(1),
    TEXT_QUERY(6),
    REQUEST_JSON(7),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 1: return AUDIO_IN_CONFIG;
        case 6: return TEXT_QUERY;
        case 7: return REQUEST_JSON;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  private void clearType() {
    typeCase_ = 0;
    type_ = null;
  }

  public static final int AUDIO_IN_CONFIG_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Specifies how to process the subsequent incoming audio. Required if
   * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
   */
  public com.google.assistant.embedded.v1alpha2.AudioInConfig getAudioInConfig() {
    if (typeCase_ == 1) {
       return (com.google.assistant.embedded.v1alpha2.AudioInConfig) type_;
    }
    return com.google.assistant.embedded.v1alpha2.AudioInConfig.getDefaultInstance();
  }
  /**
   * <pre>
   * Specifies how to process the subsequent incoming audio. Required if
   * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
   */
  private void setAudioInConfig(com.google.assistant.embedded.v1alpha2.AudioInConfig value) {
    if (value == null) {
      throw new NullPointerException();
    }
    type_ = value;
    typeCase_ = 1;
  }
  /**
   * <pre>
   * Specifies how to process the subsequent incoming audio. Required if
   * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
   */
  private void setAudioInConfig(
      com.google.assistant.embedded.v1alpha2.AudioInConfig.Builder builderForValue) {
    type_ = builderForValue.build();
    typeCase_ = 1;
  }
  /**
   * <pre>
   * Specifies how to process the subsequent incoming audio. Required if
   * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
   */
  private void mergeAudioInConfig(com.google.assistant.embedded.v1alpha2.AudioInConfig value) {
    if (typeCase_ == 1 &&
        type_ != com.google.assistant.embedded.v1alpha2.AudioInConfig.getDefaultInstance()) {
      type_ = com.google.assistant.embedded.v1alpha2.AudioInConfig.newBuilder((com.google.assistant.embedded.v1alpha2.AudioInConfig) type_)
          .mergeFrom(value).buildPartial();
    } else {
      type_ = value;
    }
    typeCase_ = 1;
  }
  /**
   * <pre>
   * Specifies how to process the subsequent incoming audio. Required if
   * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
   */
  private void clearAudioInConfig() {
    if (typeCase_ == 1) {
      typeCase_ = 0;
      type_ = null;
    }
  }

  public static final int TEXT_QUERY_FIELD_NUMBER = 6;
  /**
   * <pre>
   * The text input to be sent to the Assistant. This can be populated from a
   * text interface if audio input is not available.
   * </pre>
   *
   * <code>optional string text_query = 6;</code>
   */
  public java.lang.String getTextQuery() {
    java.lang.String ref = "";
    if (typeCase_ == 6) {
      ref = (java.lang.String) type_;
    }
    return ref;
  }
  /**
   * <pre>
   * The text input to be sent to the Assistant. This can be populated from a
   * text interface if audio input is not available.
   * </pre>
   *
   * <code>optional string text_query = 6;</code>
   */
  public com.google.protobuf.ByteString
      getTextQueryBytes() {
    java.lang.String ref = "";
    if (typeCase_ == 6) {
      ref = (java.lang.String) type_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * The text input to be sent to the Assistant. This can be populated from a
   * text interface if audio input is not available.
   * </pre>
   *
   * <code>optional string text_query = 6;</code>
   */
  private void setTextQuery(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  typeCase_ = 6;
    type_ = value;
  }
  /**
   * <pre>
   * The text input to be sent to the Assistant. This can be populated from a
   * text interface if audio input is not available.
   * </pre>
   *
   * <code>optional string text_query = 6;</code>
   */
  private void clearTextQuery() {
    if (typeCase_ == 6) {
      typeCase_ = 0;
      type_ = null;
    }
  }
  /**
   * <pre>
   * The text input to be sent to the Assistant. This can be populated from a
   * text interface if audio input is not available.
   * </pre>
   *
   * <code>optional string text_query = 6;</code>
   */
  private void setTextQueryBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    typeCase_ = 6;
    type_ = value.toStringUtf8();
  }

  public static final int REQUEST_JSON_FIELD_NUMBER = 7;
  /**
   * <pre>
   * The client input to be sent to Assistant, in JSON format, indicating the
   * device request. Here's two examples:
   * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
   * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
   * </pre>
   *
   * <code>optional string request_json = 7;</code>
   */
  public java.lang.String getRequestJson() {
    java.lang.String ref = "";
    if (typeCase_ == 7) {
      ref = (java.lang.String) type_;
    }
    return ref;
  }
  /**
   * <pre>
   * The client input to be sent to Assistant, in JSON format, indicating the
   * device request. Here's two examples:
   * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
   * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
   * </pre>
   *
   * <code>optional string request_json = 7;</code>
   */
  public com.google.protobuf.ByteString
      getRequestJsonBytes() {
    java.lang.String ref = "";
    if (typeCase_ == 7) {
      ref = (java.lang.String) type_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * The client input to be sent to Assistant, in JSON format, indicating the
   * device request. Here's two examples:
   * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
   * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
   * </pre>
   *
   * <code>optional string request_json = 7;</code>
   */
  private void setRequestJson(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  typeCase_ = 7;
    type_ = value;
  }
  /**
   * <pre>
   * The client input to be sent to Assistant, in JSON format, indicating the
   * device request. Here's two examples:
   * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
   * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
   * </pre>
   *
   * <code>optional string request_json = 7;</code>
   */
  private void clearRequestJson() {
    if (typeCase_ == 7) {
      typeCase_ = 0;
      type_ = null;
    }
  }
  /**
   * <pre>
   * The client input to be sent to Assistant, in JSON format, indicating the
   * device request. Here's two examples:
   * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
   * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
   * </pre>
   *
   * <code>optional string request_json = 7;</code>
   */
  private void setRequestJsonBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    typeCase_ = 7;
    type_ = value.toStringUtf8();
  }

  public static final int AUDIO_OUT_CONFIG_FIELD_NUMBER = 2;
  private com.google.assistant.embedded.v1alpha2.AudioOutConfig audioOutConfig_;
  /**
   * <pre>
   * *Required* Specifies how to format the audio that will be returned.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
   */
  public boolean hasAudioOutConfig() {
    return audioOutConfig_ != null;
  }
  /**
   * <pre>
   * *Required* Specifies how to format the audio that will be returned.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
   */
  public com.google.assistant.embedded.v1alpha2.AudioOutConfig getAudioOutConfig() {
    return audioOutConfig_ == null ? com.google.assistant.embedded.v1alpha2.AudioOutConfig.getDefaultInstance() : audioOutConfig_;
  }
  /**
   * <pre>
   * *Required* Specifies how to format the audio that will be returned.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
   */
  private void setAudioOutConfig(com.google.assistant.embedded.v1alpha2.AudioOutConfig value) {
    if (value == null) {
      throw new NullPointerException();
    }
    audioOutConfig_ = value;
    
    }
  /**
   * <pre>
   * *Required* Specifies how to format the audio that will be returned.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
   */
  private void setAudioOutConfig(
      com.google.assistant.embedded.v1alpha2.AudioOutConfig.Builder builderForValue) {
    audioOutConfig_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * *Required* Specifies how to format the audio that will be returned.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
   */
  private void mergeAudioOutConfig(com.google.assistant.embedded.v1alpha2.AudioOutConfig value) {
    if (audioOutConfig_ != null &&
        audioOutConfig_ != com.google.assistant.embedded.v1alpha2.AudioOutConfig.getDefaultInstance()) {
      audioOutConfig_ =
        com.google.assistant.embedded.v1alpha2.AudioOutConfig.newBuilder(audioOutConfig_).mergeFrom(value).buildPartial();
    } else {
      audioOutConfig_ = value;
    }
    
  }
  /**
   * <pre>
   * *Required* Specifies how to format the audio that will be returned.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
   */
  private void clearAudioOutConfig() {  audioOutConfig_ = null;
    
  }

  public static final int SCREEN_OUT_CONFIG_FIELD_NUMBER = 8;
  private com.google.assistant.embedded.v1alpha2.ScreenOutConfig screenOutConfig_;
  /**
   * <pre>
   * *Optional* Specifies the desired format to use when server returns a
   * visual screen response.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
   */
  public boolean hasScreenOutConfig() {
    return screenOutConfig_ != null;
  }
  /**
   * <pre>
   * *Optional* Specifies the desired format to use when server returns a
   * visual screen response.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
   */
  public com.google.assistant.embedded.v1alpha2.ScreenOutConfig getScreenOutConfig() {
    return screenOutConfig_ == null ? com.google.assistant.embedded.v1alpha2.ScreenOutConfig.getDefaultInstance() : screenOutConfig_;
  }
  /**
   * <pre>
   * *Optional* Specifies the desired format to use when server returns a
   * visual screen response.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
   */
  private void setScreenOutConfig(com.google.assistant.embedded.v1alpha2.ScreenOutConfig value) {
    if (value == null) {
      throw new NullPointerException();
    }
    screenOutConfig_ = value;
    
    }
  /**
   * <pre>
   * *Optional* Specifies the desired format to use when server returns a
   * visual screen response.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
   */
  private void setScreenOutConfig(
      com.google.assistant.embedded.v1alpha2.ScreenOutConfig.Builder builderForValue) {
    screenOutConfig_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * *Optional* Specifies the desired format to use when server returns a
   * visual screen response.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
   */
  private void mergeScreenOutConfig(com.google.assistant.embedded.v1alpha2.ScreenOutConfig value) {
    if (screenOutConfig_ != null &&
        screenOutConfig_ != com.google.assistant.embedded.v1alpha2.ScreenOutConfig.getDefaultInstance()) {
      screenOutConfig_ =
        com.google.assistant.embedded.v1alpha2.ScreenOutConfig.newBuilder(screenOutConfig_).mergeFrom(value).buildPartial();
    } else {
      screenOutConfig_ = value;
    }
    
  }
  /**
   * <pre>
   * *Optional* Specifies the desired format to use when server returns a
   * visual screen response.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
   */
  private void clearScreenOutConfig() {  screenOutConfig_ = null;
    
  }

  public static final int DIALOG_STATE_IN_FIELD_NUMBER = 3;
  private com.google.assistant.embedded.v1alpha2.DialogStateIn dialogStateIn_;
  /**
   * <pre>
   * *Required* Represents the current dialog state.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
   */
  public boolean hasDialogStateIn() {
    return dialogStateIn_ != null;
  }
  /**
   * <pre>
   * *Required* Represents the current dialog state.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
   */
  public com.google.assistant.embedded.v1alpha2.DialogStateIn getDialogStateIn() {
    return dialogStateIn_ == null ? com.google.assistant.embedded.v1alpha2.DialogStateIn.getDefaultInstance() : dialogStateIn_;
  }
  /**
   * <pre>
   * *Required* Represents the current dialog state.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
   */
  private void setDialogStateIn(com.google.assistant.embedded.v1alpha2.DialogStateIn value) {
    if (value == null) {
      throw new NullPointerException();
    }
    dialogStateIn_ = value;
    
    }
  /**
   * <pre>
   * *Required* Represents the current dialog state.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
   */
  private void setDialogStateIn(
      com.google.assistant.embedded.v1alpha2.DialogStateIn.Builder builderForValue) {
    dialogStateIn_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * *Required* Represents the current dialog state.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
   */
  private void mergeDialogStateIn(com.google.assistant.embedded.v1alpha2.DialogStateIn value) {
    if (dialogStateIn_ != null &&
        dialogStateIn_ != com.google.assistant.embedded.v1alpha2.DialogStateIn.getDefaultInstance()) {
      dialogStateIn_ =
        com.google.assistant.embedded.v1alpha2.DialogStateIn.newBuilder(dialogStateIn_).mergeFrom(value).buildPartial();
    } else {
      dialogStateIn_ = value;
    }
    
  }
  /**
   * <pre>
   * *Required* Represents the current dialog state.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
   */
  private void clearDialogStateIn() {  dialogStateIn_ = null;
    
  }

  public static final int DEVICE_CONFIG_FIELD_NUMBER = 4;
  private com.google.assistant.embedded.v1alpha2.DeviceConfig deviceConfig_;
  /**
   * <pre>
   * Device configuration that uniquely identifies a specific device.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
   */
  public boolean hasDeviceConfig() {
    return deviceConfig_ != null;
  }
  /**
   * <pre>
   * Device configuration that uniquely identifies a specific device.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
   */
  public com.google.assistant.embedded.v1alpha2.DeviceConfig getDeviceConfig() {
    return deviceConfig_ == null ? com.google.assistant.embedded.v1alpha2.DeviceConfig.getDefaultInstance() : deviceConfig_;
  }
  /**
   * <pre>
   * Device configuration that uniquely identifies a specific device.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
   */
  private void setDeviceConfig(com.google.assistant.embedded.v1alpha2.DeviceConfig value) {
    if (value == null) {
      throw new NullPointerException();
    }
    deviceConfig_ = value;
    
    }
  /**
   * <pre>
   * Device configuration that uniquely identifies a specific device.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
   */
  private void setDeviceConfig(
      com.google.assistant.embedded.v1alpha2.DeviceConfig.Builder builderForValue) {
    deviceConfig_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * Device configuration that uniquely identifies a specific device.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
   */
  private void mergeDeviceConfig(com.google.assistant.embedded.v1alpha2.DeviceConfig value) {
    if (deviceConfig_ != null &&
        deviceConfig_ != com.google.assistant.embedded.v1alpha2.DeviceConfig.getDefaultInstance()) {
      deviceConfig_ =
        com.google.assistant.embedded.v1alpha2.DeviceConfig.newBuilder(deviceConfig_).mergeFrom(value).buildPartial();
    } else {
      deviceConfig_ = value;
    }
    
  }
  /**
   * <pre>
   * Device configuration that uniquely identifies a specific device.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
   */
  private void clearDeviceConfig() {  deviceConfig_ = null;
    
  }

  public static final int DEBUG_CONFIG_FIELD_NUMBER = 5;
  private com.google.assistant.embedded.v1alpha2.DebugConfig debugConfig_;
  /**
   * <pre>
   * *Optional* Debugging parameters for the whole `Assist` RPC.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
   */
  public boolean hasDebugConfig() {
    return debugConfig_ != null;
  }
  /**
   * <pre>
   * *Optional* Debugging parameters for the whole `Assist` RPC.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
   */
  public com.google.assistant.embedded.v1alpha2.DebugConfig getDebugConfig() {
    return debugConfig_ == null ? com.google.assistant.embedded.v1alpha2.DebugConfig.getDefaultInstance() : debugConfig_;
  }
  /**
   * <pre>
   * *Optional* Debugging parameters for the whole `Assist` RPC.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
   */
  private void setDebugConfig(com.google.assistant.embedded.v1alpha2.DebugConfig value) {
    if (value == null) {
      throw new NullPointerException();
    }
    debugConfig_ = value;
    
    }
  /**
   * <pre>
   * *Optional* Debugging parameters for the whole `Assist` RPC.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
   */
  private void setDebugConfig(
      com.google.assistant.embedded.v1alpha2.DebugConfig.Builder builderForValue) {
    debugConfig_ = builderForValue.build();
    
  }
  /**
   * <pre>
   * *Optional* Debugging parameters for the whole `Assist` RPC.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
   */
  private void mergeDebugConfig(com.google.assistant.embedded.v1alpha2.DebugConfig value) {
    if (debugConfig_ != null &&
        debugConfig_ != com.google.assistant.embedded.v1alpha2.DebugConfig.getDefaultInstance()) {
      debugConfig_ =
        com.google.assistant.embedded.v1alpha2.DebugConfig.newBuilder(debugConfig_).mergeFrom(value).buildPartial();
    } else {
      debugConfig_ = value;
    }
    
  }
  /**
   * <pre>
   * *Optional* Debugging parameters for the whole `Assist` RPC.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
   */
  private void clearDebugConfig() {  debugConfig_ = null;
    
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typeCase_ == 1) {
      output.writeMessage(1, (com.google.assistant.embedded.v1alpha2.AudioInConfig) type_);
    }
    if (audioOutConfig_ != null) {
      output.writeMessage(2, getAudioOutConfig());
    }
    if (dialogStateIn_ != null) {
      output.writeMessage(3, getDialogStateIn());
    }
    if (deviceConfig_ != null) {
      output.writeMessage(4, getDeviceConfig());
    }
    if (debugConfig_ != null) {
      output.writeMessage(5, getDebugConfig());
    }
    if (typeCase_ == 6) {
      output.writeString(6, getTextQuery());
    }
    if (typeCase_ == 7) {
      output.writeString(7, getRequestJson());
    }
    if (screenOutConfig_ != null) {
      output.writeMessage(8, getScreenOutConfig());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (typeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.assistant.embedded.v1alpha2.AudioInConfig) type_);
    }
    if (audioOutConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAudioOutConfig());
    }
    if (dialogStateIn_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDialogStateIn());
    }
    if (deviceConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getDeviceConfig());
    }
    if (debugConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getDebugConfig());
    }
    if (typeCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(6, getTextQuery());
    }
    if (typeCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(7, getRequestJson());
    }
    if (screenOutConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getScreenOutConfig());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.assistant.embedded.v1alpha2.AssistConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.assistant.embedded.v1alpha2.AssistConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Specifies how to process the `AssistRequest` messages.
   * </pre>
   *
   * Protobuf type {@code google.assistant.embedded.v1alpha2.AssistConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.assistant.embedded.v1alpha2.AssistConfig, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.assistant.embedded.v1alpha2.AssistConfig)
      com.google.assistant.embedded.v1alpha2.AssistConfigOrBuilder {
    // Construct using com.google.assistant.embedded.v1alpha2.AssistConfig.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    public TypeCase
        getTypeCase() {
      return instance.getTypeCase();
    }

    public Builder clearType() {
      copyOnWrite();
      instance.clearType();
      return this;
    }


    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public com.google.assistant.embedded.v1alpha2.AudioInConfig getAudioInConfig() {
      return instance.getAudioInConfig();
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public Builder setAudioInConfig(com.google.assistant.embedded.v1alpha2.AudioInConfig value) {
      copyOnWrite();
      instance.setAudioInConfig(value);
      return this;
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public Builder setAudioInConfig(
        com.google.assistant.embedded.v1alpha2.AudioInConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setAudioInConfig(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public Builder mergeAudioInConfig(com.google.assistant.embedded.v1alpha2.AudioInConfig value) {
      copyOnWrite();
      instance.mergeAudioInConfig(value);
      return this;
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public Builder clearAudioInConfig() {
      copyOnWrite();
      instance.clearAudioInConfig();
      return this;
    }

    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>optional string text_query = 6;</code>
     */
    public java.lang.String getTextQuery() {
      return instance.getTextQuery();
    }
    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>optional string text_query = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTextQueryBytes() {
      return instance.getTextQueryBytes();
    }
    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>optional string text_query = 6;</code>
     */
    public Builder setTextQuery(
        java.lang.String value) {
      copyOnWrite();
      instance.setTextQuery(value);
      return this;
    }
    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>optional string text_query = 6;</code>
     */
    public Builder clearTextQuery() {
      copyOnWrite();
      instance.clearTextQuery();
      return this;
    }
    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>optional string text_query = 6;</code>
     */
    public Builder setTextQueryBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTextQueryBytes(value);
      return this;
    }

    /**
     * <pre>
     * The client input to be sent to Assistant, in JSON format, indicating the
     * device request. Here's two examples:
     * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
     * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
     * </pre>
     *
     * <code>optional string request_json = 7;</code>
     */
    public java.lang.String getRequestJson() {
      return instance.getRequestJson();
    }
    /**
     * <pre>
     * The client input to be sent to Assistant, in JSON format, indicating the
     * device request. Here's two examples:
     * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
     * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
     * </pre>
     *
     * <code>optional string request_json = 7;</code>
     */
    public com.google.protobuf.ByteString
        getRequestJsonBytes() {
      return instance.getRequestJsonBytes();
    }
    /**
     * <pre>
     * The client input to be sent to Assistant, in JSON format, indicating the
     * device request. Here's two examples:
     * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
     * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
     * </pre>
     *
     * <code>optional string request_json = 7;</code>
     */
    public Builder setRequestJson(
        java.lang.String value) {
      copyOnWrite();
      instance.setRequestJson(value);
      return this;
    }
    /**
     * <pre>
     * The client input to be sent to Assistant, in JSON format, indicating the
     * device request. Here's two examples:
     * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
     * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
     * </pre>
     *
     * <code>optional string request_json = 7;</code>
     */
    public Builder clearRequestJson() {
      copyOnWrite();
      instance.clearRequestJson();
      return this;
    }
    /**
     * <pre>
     * The client input to be sent to Assistant, in JSON format, indicating the
     * device request. Here's two examples:
     * 1. {"intent": "action.devices.intent.REQUEST_SIGN_IN"}
     * 2. {"intent": "action.devices.intent.REQUEST_DISCOVERABILITY_EXAMPLES"}
     * </pre>
     *
     * <code>optional string request_json = 7;</code>
     */
    public Builder setRequestJsonBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setRequestJsonBytes(value);
      return this;
    }

    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public boolean hasAudioOutConfig() {
      return instance.hasAudioOutConfig();
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public com.google.assistant.embedded.v1alpha2.AudioOutConfig getAudioOutConfig() {
      return instance.getAudioOutConfig();
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public Builder setAudioOutConfig(com.google.assistant.embedded.v1alpha2.AudioOutConfig value) {
      copyOnWrite();
      instance.setAudioOutConfig(value);
      return this;
      }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public Builder setAudioOutConfig(
        com.google.assistant.embedded.v1alpha2.AudioOutConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setAudioOutConfig(builderForValue);
      return this;
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public Builder mergeAudioOutConfig(com.google.assistant.embedded.v1alpha2.AudioOutConfig value) {
      copyOnWrite();
      instance.mergeAudioOutConfig(value);
      return this;
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public Builder clearAudioOutConfig() {  copyOnWrite();
      instance.clearAudioOutConfig();
      return this;
    }

    /**
     * <pre>
     * *Optional* Specifies the desired format to use when server returns a
     * visual screen response.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
     */
    public boolean hasScreenOutConfig() {
      return instance.hasScreenOutConfig();
    }
    /**
     * <pre>
     * *Optional* Specifies the desired format to use when server returns a
     * visual screen response.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
     */
    public com.google.assistant.embedded.v1alpha2.ScreenOutConfig getScreenOutConfig() {
      return instance.getScreenOutConfig();
    }
    /**
     * <pre>
     * *Optional* Specifies the desired format to use when server returns a
     * visual screen response.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
     */
    public Builder setScreenOutConfig(com.google.assistant.embedded.v1alpha2.ScreenOutConfig value) {
      copyOnWrite();
      instance.setScreenOutConfig(value);
      return this;
      }
    /**
     * <pre>
     * *Optional* Specifies the desired format to use when server returns a
     * visual screen response.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
     */
    public Builder setScreenOutConfig(
        com.google.assistant.embedded.v1alpha2.ScreenOutConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setScreenOutConfig(builderForValue);
      return this;
    }
    /**
     * <pre>
     * *Optional* Specifies the desired format to use when server returns a
     * visual screen response.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
     */
    public Builder mergeScreenOutConfig(com.google.assistant.embedded.v1alpha2.ScreenOutConfig value) {
      copyOnWrite();
      instance.mergeScreenOutConfig(value);
      return this;
    }
    /**
     * <pre>
     * *Optional* Specifies the desired format to use when server returns a
     * visual screen response.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;</code>
     */
    public Builder clearScreenOutConfig() {  copyOnWrite();
      instance.clearScreenOutConfig();
      return this;
    }

    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public boolean hasDialogStateIn() {
      return instance.hasDialogStateIn();
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public com.google.assistant.embedded.v1alpha2.DialogStateIn getDialogStateIn() {
      return instance.getDialogStateIn();
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public Builder setDialogStateIn(com.google.assistant.embedded.v1alpha2.DialogStateIn value) {
      copyOnWrite();
      instance.setDialogStateIn(value);
      return this;
      }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public Builder setDialogStateIn(
        com.google.assistant.embedded.v1alpha2.DialogStateIn.Builder builderForValue) {
      copyOnWrite();
      instance.setDialogStateIn(builderForValue);
      return this;
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public Builder mergeDialogStateIn(com.google.assistant.embedded.v1alpha2.DialogStateIn value) {
      copyOnWrite();
      instance.mergeDialogStateIn(value);
      return this;
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public Builder clearDialogStateIn() {  copyOnWrite();
      instance.clearDialogStateIn();
      return this;
    }

    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public boolean hasDeviceConfig() {
      return instance.hasDeviceConfig();
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public com.google.assistant.embedded.v1alpha2.DeviceConfig getDeviceConfig() {
      return instance.getDeviceConfig();
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public Builder setDeviceConfig(com.google.assistant.embedded.v1alpha2.DeviceConfig value) {
      copyOnWrite();
      instance.setDeviceConfig(value);
      return this;
      }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public Builder setDeviceConfig(
        com.google.assistant.embedded.v1alpha2.DeviceConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setDeviceConfig(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public Builder mergeDeviceConfig(com.google.assistant.embedded.v1alpha2.DeviceConfig value) {
      copyOnWrite();
      instance.mergeDeviceConfig(value);
      return this;
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public Builder clearDeviceConfig() {  copyOnWrite();
      instance.clearDeviceConfig();
      return this;
    }

    /**
     * <pre>
     * *Optional* Debugging parameters for the whole `Assist` RPC.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
     */
    public boolean hasDebugConfig() {
      return instance.hasDebugConfig();
    }
    /**
     * <pre>
     * *Optional* Debugging parameters for the whole `Assist` RPC.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
     */
    public com.google.assistant.embedded.v1alpha2.DebugConfig getDebugConfig() {
      return instance.getDebugConfig();
    }
    /**
     * <pre>
     * *Optional* Debugging parameters for the whole `Assist` RPC.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
     */
    public Builder setDebugConfig(com.google.assistant.embedded.v1alpha2.DebugConfig value) {
      copyOnWrite();
      instance.setDebugConfig(value);
      return this;
      }
    /**
     * <pre>
     * *Optional* Debugging parameters for the whole `Assist` RPC.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
     */
    public Builder setDebugConfig(
        com.google.assistant.embedded.v1alpha2.DebugConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setDebugConfig(builderForValue);
      return this;
    }
    /**
     * <pre>
     * *Optional* Debugging parameters for the whole `Assist` RPC.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
     */
    public Builder mergeDebugConfig(com.google.assistant.embedded.v1alpha2.DebugConfig value) {
      copyOnWrite();
      instance.mergeDebugConfig(value);
      return this;
    }
    /**
     * <pre>
     * *Optional* Debugging parameters for the whole `Assist` RPC.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;</code>
     */
    public Builder clearDebugConfig() {  copyOnWrite();
      instance.clearDebugConfig();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.assistant.embedded.v1alpha2.AssistConfig)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.assistant.embedded.v1alpha2.AssistConfig();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.assistant.embedded.v1alpha2.AssistConfig other = (com.google.assistant.embedded.v1alpha2.AssistConfig) arg1;
        audioOutConfig_ = visitor.visitMessage(audioOutConfig_, other.audioOutConfig_);
        screenOutConfig_ = visitor.visitMessage(screenOutConfig_, other.screenOutConfig_);
        dialogStateIn_ = visitor.visitMessage(dialogStateIn_, other.dialogStateIn_);
        deviceConfig_ = visitor.visitMessage(deviceConfig_, other.deviceConfig_);
        debugConfig_ = visitor.visitMessage(debugConfig_, other.debugConfig_);
        switch (other.getTypeCase()) {
          case AUDIO_IN_CONFIG: {
            type_ = visitor.visitOneofMessage(
                typeCase_ == 1,
                type_,
                other.type_);
            break;
          }
          case TEXT_QUERY: {
            type_ = visitor.visitOneofString(
               typeCase_ == 6, type_, other.type_);
            break;
          }
          case REQUEST_JSON: {
            type_ = visitor.visitOneofString(
               typeCase_ == 7, type_, other.type_);
            break;
          }
          case TYPE_NOT_SET: {
            visitor.visitOneofNotSet(typeCase_ != 0);
            break;
          }
        }
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          if (other.typeCase_ != 0) {
            typeCase_ = other.typeCase_;
          }
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.assistant.embedded.v1alpha2.AudioInConfig.Builder subBuilder = null;
                if (typeCase_ == 1) {
                  subBuilder = ((com.google.assistant.embedded.v1alpha2.AudioInConfig) type_).toBuilder();
                }
                type_ =
                     input.readMessage(com.google.assistant.embedded.v1alpha2.AudioInConfig.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.google.assistant.embedded.v1alpha2.AudioInConfig) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 1;
                break;
              }
              case 18: {
                com.google.assistant.embedded.v1alpha2.AudioOutConfig.Builder subBuilder = null;
                if (audioOutConfig_ != null) {
                  subBuilder = audioOutConfig_.toBuilder();
                }
                audioOutConfig_ = input.readMessage(com.google.assistant.embedded.v1alpha2.AudioOutConfig.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(audioOutConfig_);
                  audioOutConfig_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                com.google.assistant.embedded.v1alpha2.DialogStateIn.Builder subBuilder = null;
                if (dialogStateIn_ != null) {
                  subBuilder = dialogStateIn_.toBuilder();
                }
                dialogStateIn_ = input.readMessage(com.google.assistant.embedded.v1alpha2.DialogStateIn.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(dialogStateIn_);
                  dialogStateIn_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                com.google.assistant.embedded.v1alpha2.DeviceConfig.Builder subBuilder = null;
                if (deviceConfig_ != null) {
                  subBuilder = deviceConfig_.toBuilder();
                }
                deviceConfig_ = input.readMessage(com.google.assistant.embedded.v1alpha2.DeviceConfig.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deviceConfig_);
                  deviceConfig_ = subBuilder.buildPartial();
                }

                break;
              }
              case 42: {
                com.google.assistant.embedded.v1alpha2.DebugConfig.Builder subBuilder = null;
                if (debugConfig_ != null) {
                  subBuilder = debugConfig_.toBuilder();
                }
                debugConfig_ = input.readMessage(com.google.assistant.embedded.v1alpha2.DebugConfig.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(debugConfig_);
                  debugConfig_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                String s = input.readStringRequireUtf8();
                typeCase_ = 6;
                type_ = s;
                break;
              }
              case 58: {
                String s = input.readStringRequireUtf8();
                typeCase_ = 7;
                type_ = s;
                break;
              }
              case 66: {
                com.google.assistant.embedded.v1alpha2.ScreenOutConfig.Builder subBuilder = null;
                if (screenOutConfig_ != null) {
                  subBuilder = screenOutConfig_.toBuilder();
                }
                screenOutConfig_ = input.readMessage(com.google.assistant.embedded.v1alpha2.ScreenOutConfig.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(screenOutConfig_);
                  screenOutConfig_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.assistant.embedded.v1alpha2.AssistConfig.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.assistant.embedded.v1alpha2.AssistConfig)
  private static final com.google.assistant.embedded.v1alpha2.AssistConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AssistConfig();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.assistant.embedded.v1alpha2.AssistConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AssistConfig> PARSER;

  public static com.google.protobuf.Parser<AssistConfig> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

